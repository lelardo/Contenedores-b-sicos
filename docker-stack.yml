version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: proyecto_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      POSTGRES_SHARED_PRELOAD_LIBRARIES: ""
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d proyecto_db"]
      interval: 10s
      timeout: 10s
      retries: 3
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 180s
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    networks:
      - app-network

  loggin-service:
    image: lelardo/loggin-service:latest
    command: >
      sh -c "
        /wait-for-it.sh db:5432 --timeout=60 --strict -- 
        echo 'Esperando base de datos...' &&
        until nc -z db 5432; do
          echo 'DB no disponible, reintentando...'
          sleep 2
        done &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000 --noreload
      "
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=proyecto_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  session-service:
    image: lelardo/session-service:latest
    command: >
      sh -c "
        echo 'Esperando a que la base de datos esté lista...' &&
        sleep 12 &&
        npm start
      "
    ports:
      - "3003:3003"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=proyecto_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    depends_on:
      - db
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    networks:
      - app-network

  posts-service:
    image: lelardo/posts-service:latest
    command: >
      sh -c "
        echo 'Esperando a que la base de datos esté lista...' &&
        sleep 15 &&
        npm start
      "
    ports:
      - "3001:3001"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=proyecto_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    depends_on:
      - db
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    networks:
      - app-network

  comments-service:
    image: lelardo/comments-service:latest
    command: >
      sh -c "
        echo 'Esperando a que la base de datos esté lista...' &&
        sleep 20 &&
        python app.py
      "
    ports:
      - "3002:3002"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=proyecto_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    depends_on:
      - db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - app-network

  messages-service:
    image: lelardo/messages-service:latest
    command: >
      sh -c "
        echo 'Esperando a que la base de datos esté lista...' &&
        sleep 18 &&
        npm start
      "
    ports:
      - "3004:3004"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=proyecto_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
      - USER_SERVICE_URL=http://session-service:3003
    depends_on:
      - db
      - session-service
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    networks:
      - app-network

  frontend:
    image: lelardo/frontend:latest
    command: >
      sh -c "
        npm run build &&
        npm run preview -- --host 0.0.0.0
      "
    ports:
      - "4321:4321"
    depends_on:
      - loggin-service
      - session-service
      - posts-service
      - comments-service
      - messages-service
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: overlay
    attachable: true